{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LoginPage(){// Local state for email, password, and error messages\nconst[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');// Hook to navigate between pages\nconst navigate=useNavigate();// Handle form submission\nconst handleLogin=async e=>{e.preventDefault();try{// Send login request to backend\nconst response=await axios.post('https://adicloud.onrender.com/login',{email,password});// Save token and role in local storage\nlocalStorage.setItem('token',response.data.token);localStorage.setItem('role',response.data.role);localStorage.setItem('userId',response.data.userId);// Check user role and redirect accordingly\nif(response.data.role==='admin'){navigate('/admin');}else{navigate('/user');}}catch(err){// Show error message if login fails\nsetError('Invalid credentials. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]});}export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","LoginPage","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","post","localStorage","setItem","data","token","role","userId","err","className","children","onSubmit","type","placeholder","value","onChange","target","required","style","color"],"sources":["C:/Adicloud/adicloud-frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction LoginPage() {\r\n  // Local state for email, password, and error messages\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Hook to navigate between pages\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form submission\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Send login request to backend\r\n      const response = await axios.post('https://adicloud.onrender.com/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      // Save token and role in local storage\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('role', response.data.role);\r\n      localStorage.setItem('userId', response.data.userId);\r\n\r\n      // Check user role and redirect accordingly\r\n      if (response.data.role === 'admin') {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/user');\r\n      }\r\n    } catch (err) {\r\n      // Show error message if login fails\r\n      setError('Invalid credentials. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        {/* Email input */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {/* Password input */}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {/* Submit button */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      {/* Display error message */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACA,KAAM,CAAAc,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAc,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,IAAI,CAAC,qCAAqC,CAAE,CACvEX,KAAK,CACLE,QACF,CAAC,CAAC,CAEF;AACAU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,CAClDH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEH,QAAQ,CAACI,IAAI,CAACE,IAAI,CAAC,CAChDJ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAEH,QAAQ,CAACI,IAAI,CAACG,MAAM,CAAC,CAEpD;AACA,GAAIP,QAAQ,CAACI,IAAI,CAACE,IAAI,GAAK,OAAO,CAAE,CAClCV,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACLA,QAAQ,CAAC,OAAO,CAAC,CACnB,CACF,CAAE,MAAOY,GAAG,CAAE,CACZ;AACAb,QAAQ,CAAC,wCAAwC,CAAC,CACpD,CACF,CAAC,CAED,mBACEP,KAAA,QAAKqB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BxB,IAAA,OAAAwB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdtB,KAAA,SAAMuB,QAAQ,CAAEd,WAAY,CAAAa,QAAA,eAE1BxB,IAAA,UACE0B,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAExB,KAAM,CACbyB,QAAQ,CAAGjB,CAAC,EAAKP,QAAQ,CAACO,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAC1CG,QAAQ,MACT,CAAC,cAGF/B,IAAA,UACE0B,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,KAAK,CAAEtB,QAAS,CAChBuB,QAAQ,CAAGjB,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,cAGF/B,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,CAGNhB,KAAK,eAAIR,IAAA,MAAGgC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAT,QAAA,CAAEhB,KAAK,CAAI,CAAC,EAC9C,CAAC,CAEV,CAEA,cAAe,CAAAL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}