{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminDashboard(){const[requests,setRequests]=useState([]);const[statusFilter,setStatusFilter]=useState('');// '' = all\nconst token=localStorage.getItem('token');// Fetch requests from backend based on status filter\nuseEffect(()=>{const fetchRequests=async()=>{try{let url='https://adicloud.onrender.com/requests';if(statusFilter){url=`https://adicloud.onrender.com/requests/status/${statusFilter}`;}const res=await axios.get(url,{headers:{Authorization:`Bearer ${token}`}});setRequests(res.data);}catch(err){console.error('Error fetching requests:',err);}};fetchRequests();},[statusFilter,token]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setStatusFilter(e.target.value),value:statusFilter,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Approved\",children:\"Approved\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Rejected\",children:\"Rejected\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:requests.map(req=>{var _req$userId,_req$assetId;return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"User:\"}),\" \",(_req$userId=req.userId)===null||_req$userId===void 0?void 0:_req$userId.email,\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\" Asset:\"}),\" \",(_req$assetId=req.assetId)===null||_req$assetId===void 0?void 0:_req$assetId.name,\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\" Status:\"}),\" \",req.status]},req._id);})})]});}export default AdminDashboard;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","AdminDashboard","requests","setRequests","statusFilter","setStatusFilter","token","localStorage","getItem","fetchRequests","url","res","get","headers","Authorization","data","err","console","error","children","onChange","e","target","value","map","req","_req$userId","_req$assetId","userId","email","assetId","name","status","_id"],"sources":["C:/Adicloud/adicloud-frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AdminDashboard() {\r\n  const [requests, setRequests] = useState([]);\r\n  const [statusFilter, setStatusFilter] = useState(''); // '' = all\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Fetch requests from backend based on status filter\r\n  useEffect(() => {\r\n    const fetchRequests = async () => {\r\n      try {\r\n        let url = 'https://adicloud.onrender.com/requests';\r\n        if (statusFilter) {\r\n          url = `https://adicloud.onrender.com/requests/status/${statusFilter}`;\r\n        }\r\n\r\n        const res = await axios.get(url, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        setRequests(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching requests:', err);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, [statusFilter, token]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Dashboard</h2>\r\n\r\n      {/* Status filter dropdown */}\r\n      <select onChange={(e) => setStatusFilter(e.target.value)} value={statusFilter}>\r\n        <option value=\"\">All</option>\r\n        <option value=\"Pending\">Pending</option>\r\n        <option value=\"Approved\">Approved</option>\r\n        <option value=\"Rejected\">Rejected</option>\r\n      </select>\r\n\r\n      {/* Requests list */}\r\n      <ul>\r\n        {requests.map((req) => (\r\n          <li key={req._id}>\r\n            <strong>User:</strong> {req.userId?.email} | \r\n            <strong> Asset:</strong> {req.assetId?.name} |\r\n            <strong> Status:</strong> {req.status}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAE;AACtD,KAAM,CAAAW,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C;AACAd,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,GAAI,CAAAC,GAAG,CAAG,wCAAwC,CAClD,GAAIN,YAAY,CAAE,CAChBM,GAAG,CAAG,iDAAiDN,YAAY,EAAE,CACvE,CAEA,KAAM,CAAAO,GAAG,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAACF,GAAG,CAAE,CAC/BG,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUR,KAAK,EAAG,CAC9C,CAAC,CAAC,CAEFH,WAAW,CAACQ,GAAG,CAACI,IAAI,CAAC,CACvB,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEF,GAAG,CAAC,CAChD,CACF,CAAC,CAEDP,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,CAACL,YAAY,CAAEE,KAAK,CAAC,CAAC,CAEzB,mBACEN,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,iBAAe,CAAI,CAAC,cAGxBnB,KAAA,WAAQoB,QAAQ,CAAGC,CAAC,EAAKhB,eAAe,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAACA,KAAK,CAAEnB,YAAa,CAAAe,QAAA,eAC5ErB,IAAA,WAAQyB,KAAK,CAAC,EAAE,CAAAJ,QAAA,CAAC,KAAG,CAAQ,CAAC,cAC7BrB,IAAA,WAAQyB,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxCrB,IAAA,WAAQyB,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1CrB,IAAA,WAAQyB,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACpC,CAAC,cAGTrB,IAAA,OAAAqB,QAAA,CACGjB,QAAQ,CAACsB,GAAG,CAAEC,GAAG,OAAAC,WAAA,CAAAC,YAAA,oBAChB3B,KAAA,OAAAmB,QAAA,eACErB,IAAA,WAAAqB,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,EAAAO,WAAA,CAACD,GAAG,CAACG,MAAM,UAAAF,WAAA,iBAAVA,WAAA,CAAYG,KAAK,CAAC,IAC1C,cAAA/B,IAAA,WAAAqB,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,EAAAQ,YAAA,CAACF,GAAG,CAACK,OAAO,UAAAH,YAAA,iBAAXA,YAAA,CAAaI,IAAI,CAAC,IAC5C,cAAAjC,IAAA,WAAAqB,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACM,GAAG,CAACO,MAAM,GAH9BP,GAAG,CAACQ,GAIT,CAAC,EACN,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAhC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}